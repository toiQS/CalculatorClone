<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="delete.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAAkCAYAAADGrhlwAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5goODjs6VoYmLQAAA35JREFU
        WEfN2NvLFVUYx3G7s9QOHlNDjdQ0O6ipmIpFdJ83+heIf4mhqJXZiTx18JhE3oVUSASZh/CchlmgiXnR
        vZTa2/crDDwsZu9ZM3u35/3B5+Kdd2bNPHtmrVlrRvQhT+AI7uDvYaCnTMLn+BdDw0TjTMRBlDXapkaZ
        gP1IG/sLf+DGAHiem/gH8RpqZzz2IDaiY1iBmZg1AJ7nJfyKeB21Mg6fIjag43gWg46P/c+I15KdsfgY
        6QBwEs+jjTyORgU9hp1Ii/kJ89FWGhX0KLYjLeY0FqLN1C7oEXyIe4gHncUiVOUBLIbPek6egZ09N7UK
        ehjvIy3mPJYgJ6twHY6Kjo7d8iK869/jaTdkJLugMdiGu4g7X8BS5OR1+K4ojv0EDixlWQD7Y7Hvd5iD
        qmQVNBpbkRbjgcuQk5H4DPF4++AuOMDEvABHyriv88J1qEplQaPwJmww7nQZvjTrxL7wDWI7FrUDDjTm
        OfgOi/t47s3wh61K14Iegg2lxfyClWgSizqK2J590oFmOZxdxP957rfgD5uTjgU9iI1I50VX8Ap6yWzY
        J2K7XvitZJuPuI96zp0pUlqQxaxHWsxVvIp+xFHL0Su2H1nMu3AwqpPSgjbhdtggR6fX0M84aqWdv/AR
        6hZjSgvyNrvSixuv4WX0M/antM8U3oN9uG5KC7IDepf6MbJ1ylP4FrH9yHNvQe5gUKTjoGBDbyN991xC
        7runU57E14jteh4Xg3GbRfnD1rlTHQsyji7vIC3qInJnB2lmwA8osT35gnXAORW2yYFpAxyoctK1IGPH
        9HnuZf5WxGK+QmxHLhBdKBpn687f4v/tz28g505VFmSclH6ApjNs49THxWA8XnuRTlJt8wzift6ptahK
        VkHGZYNDadkayFlxVVw2rMafKI71o4ofV8riEuMcin1/QM6SPrsg43zLeVfZKtXZcU7WwC8zh+A3vG6x
        n9pfndvNc0NGahVknBnvRlqUndlZclW8U87ZJt//qzou53OWDUVqF2Rcw7iWiQfpBJwtt5lGBZlO3+J+
        RO7j8X+kcUHGDr0P8WDZgeeijfRUkPFjxwHEBuRMus6z36/09KGxiKOVo1ZsRK55HH6nYfoAeB7fYa7Z
        4nU0iqPWF4gNyUXbb/h9QFwV9PyxvsgUfInY2HDQU6biMMoabkvPcXmQfjNoyYih/wDejrmvQwOB/gAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>